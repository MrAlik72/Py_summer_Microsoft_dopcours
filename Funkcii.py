i=5
print(type(i))
c=type(5)#Функция type()проверяет значение, переданное в качестве входного параметра (слово между круглыми скобками), и возвращает тип данных.
print(c) #термин class (класс)  — это просто классификация

'''###########################################################################################################################################'''

first = 'Conrad'
second = 'Grant'
third = 'Bob' 
print(first, second)
print(first, second, third)
print(first, second, third, sep='-')#sep-определяет символ, который будет использоваться для разделения строк по мере их сцепления для вывода.
print(first, second, third, sep='-', end='.')#end-определяет символ, который мы хотим использовать в самом конце последовательности.

'''###########################################################################################################################################'''

first_number = 5
vtoroy_number = 0
true_value = True
false_value = False
if first_number > 1 and first_number < 10:
    print('Значение находится между 1 и 10.')
if first_number > 1 or vtoroy_number < 1:
    print('По крайней мере одно значение больше 1')
print(not true_value)
print(not false_value)
if not first_number > 1 and vtoroy_number < 10:
    print('Оба значения проходят тест')
else:
    print('Оба значения НЕ проходят тест')

'''###########################################################################################################################################'''
''' isinstance() сообщает, является ли значение ожидаемым значение\|/возвращает True или False
isalnum()	Гарантирует, что в строке не будет специальных символов, таких как %, $, #, @ или!.
isalpha()	Гарантирует, что строка будет содержать только буквы алфавита.
isdecimal()	Гарантирует, что строка будет содержать только десятичные значения (числа).
istitle()	Гарантирует, что строка будет соответствовать правилам употребления заглавных букв (как в предложении).
isupper()	Гарантирует, что строка будет содержать только заглавные буквы.
islower()	Гарантирует, что строка будет содержать только прописные буквы.'''
print(isinstance('7', str))
print(isinstance(7, int))
print(type(7) == str)
print(type('7') == int)
##
first_value = input('First Number: ')
second_value = input('Second Number: ')#isnumeric() возвращает tru или False, если строковое значение можно преобразовать в числовое значение.
if first_value.isnumeric() == False or second_value.isnumeric() == False:
    print('Please enter numbers only.')
    exit() #exit(), чтобы немедленно завершить выполнение программы.'''
first_value = int(first_value)
second_value = int(second_value)
sum = first_value + second_value
print('Sum: ' + str(sum))
uptime = 99.99
print(type(uptime))
print(int(uptime))
print(round(uptime)) #Функция round() предоставляет способ выполнения округления и преобразования значения float в значение int.

'''###########################################################################################################################################'''
